#!/usr/bin/env node
import*as U from"fs";import*as d from"path";import*as l from"url";import{transformSync as _}from"esbuild";async function w(t,s,o){if(!(t.startsWith(".")||t.startsWith("/"))){const r=global.__tsArcConfig;if(r){const{baseUrl:n,paths:a,tsconfigDir:m}=r;for(const i of Object.keys(a)){let e=null;if(i.endsWith("/*")){const c=i.slice(0,-2);t.startsWith(c)&&(e=t.slice(c.length))}else t===i&&(e="");if(e!==null)for(const c of a[i]){const g=c.replace(/\*/g,e),h=n??m;if(h){const y=l.pathToFileURL(d.join(h,"dummy.ts")).href;try{return{...await o(`./${g}`,{parentURL:y}),shortCircuit:!0}}catch(f){if(f.code!=="ERR_MODULE_NOT_FOUND")throw f}}}}if(n){const i=l.pathToFileURL(d.join(n,"dummy.ts")).href;try{return{...await o(`./${t}`,{parentURL:i}),shortCircuit:!0}}catch(e){if(e.code!=="ERR_MODULE_NOT_FOUND")throw e}}}}try{return{...await o(t,s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+".ts",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+".tsx",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+"/index.ts",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+"/index.tsx",s),shortCircuit:!0}}catch(r){throw r}}async function R(t,s,o){let u="ts";if(t.endsWith(".tsx"))u="tsx";else return o(t,s);const r=l.fileURLToPath(t),n=U.readFileSync(r,"utf8"),{code:a}=_(n,{loader:u,format:"esm",target:`node${process.versions.node}`,sourcemap:"inline",sourcefile:r});return{format:"module",source:a,shortCircuit:!0}}export{R as load,w as resolve};
