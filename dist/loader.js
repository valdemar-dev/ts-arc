#!/usr/bin/env node
import*as O from"fs";import*as g from"path";import*as f from"url";import{transformSync as R}from"esbuild";let h;function w(t){console.log("TS-ARC: Loader got init context:",t),h=t}async function y(t,s,o){if(!(t.startsWith(".")||t.startsWith("/"))&&h){const{baseUrl:r,paths:a,tsconfigDir:u}=h;for(const i of Object.keys(a)){let e=null;if(i.endsWith("/*")){const c=i.slice(0,-2);if(t.startsWith(c)){let n=t.slice(c.length);e=n.startsWith("/")?n.slice(1):n}}else t===i&&(e="");if(e!==null)for(const c of a[i]){const n=c.replace(/\*/g,e),m=r??u;if(m){const U=f.pathToFileURL(g.join(m,"dummy.ts")).href;try{return{...await y(`./${n}`,{parentURL:U},o),shortCircuit:!0}}catch(l){if(l.code!=="ERR_MODULE_NOT_FOUND")throw l}}}}if(r){const i=f.pathToFileURL(g.join(r,"dummy.ts")).href;try{return{...await y(`./${t}`,{parentURL:i},o),shortCircuit:!0}}catch(e){if(e.code!=="ERR_MODULE_NOT_FOUND")throw e}}}try{return{...await o(t,s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+".ts",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+".tsx",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+"/index.ts",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+"/index.tsx",s),shortCircuit:!0}}catch(r){throw r}}async function p(t,s,o){if(!t.endsWith(".ts")&&!t.endsWith(".tsx"))return o(t,s);const d=t.endsWith(".tsx")?"tsx":"ts",r=f.fileURLToPath(t),a=O.readFileSync(r,"utf8"),{code:u}=R(a,{loader:d,format:"esm",target:`node${process.versions.node}`,sourcemap:"inline",sourcefile:r,banner:`
import { createRequire } from 'module';
const require = createRequire(import.meta.url);`});return{format:"module",source:u,shortCircuit:!0}}export{w as initialize,p as load,y as resolve};
