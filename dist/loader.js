#!/usr/bin/env node
import*as w from"fs";import*as y from"path";import*as h from"url";import{transformSync as O}from"esbuild";let l;function v(t){l=t}async function R(t,s,o){if(!(t.startsWith(".")||t.startsWith("/"))&&l){const{baseUrl:r,paths:c,tsconfigDir:u}=l;console.debug("Resolving,",t,"with tsconfig:",l);for(const n of Object.keys(c)){let i=null;if(n.endsWith("/*")){const e=n.slice(0,-2);if(t.startsWith(e)){let a=t.slice(e.length);i=a.startsWith("/")?a.slice(1):a}}else t===n&&(i="");if(i!==null)for(const e of c[n]){const a=e.replace(/\*/g,i),m=r??u,g=`./${a}`;if(m){const U=h.pathToFileURL(y.join(m,"dummy.ts")).href;try{return{...await R(g,{parentURL:U},o),shortCircuit:!0}}catch(f){if(console.error("TS-ARC: Could not find a module with a resolved filePath of:",g),f.code!=="ERR_MODULE_NOT_FOUND")throw f}}}}if(r){const n=h.pathToFileURL(y.join(r,"dummy.ts")).href,i=`./${t}`;try{return{...await R(i,{parentURL:n},o),shortCircuit:!0}}catch(e){if(e.code!=="ERR_MODULE_NOT_FOUND")throw console.error("TS-ARC: Could not find a module with a resolved filePath of:",i),e}}}try{return{...await o(t,s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+".ts",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+".tsx",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+"/index.ts",s),shortCircuit:!0}}catch(r){if(r.code!=="ERR_MODULE_NOT_FOUND")throw r}try{return{...await o(t+"/index.tsx",s),shortCircuit:!0}}catch(r){throw r}}async function C(t,s,o){if(!t.endsWith(".ts")&&!t.endsWith(".tsx"))return o(t,s);const d=t.endsWith(".tsx")?"tsx":"ts",r=h.fileURLToPath(t),c=w.readFileSync(r,"utf8"),{code:u}=O(c,{loader:d,format:"esm",target:`node${process.versions.node}`,sourcemap:"inline",sourcefile:r,banner:`
import { createRequire } from 'module';
const require = createRequire(import.meta.url);`});return{format:"module",source:u,shortCircuit:!0}}export{v as initialize,C as load,R as resolve};
