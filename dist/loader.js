import*as _ from"fs";import*as l from"path";import*as h from"url";import{transformSync as D}from"esbuild";let m;function b(r){m=r}async function y(r,i,e){if(!(r.startsWith(".")||r.startsWith("/"))){if(m){const{baseUrl:t,paths:o,tsconfigDir:d}=m,O=t?l.resolve(d??"",t):d;for(const s of Object.keys(o)){let a=null,c=s.endsWith("/*");const n=c?s.slice(0,-2):s;if(c?r.startsWith(n+"/")&&(a=r.slice(n.length+1)):r===s&&(a=""),a!==null)for(const p of o[s]){const U=`./${c?p.replace(/\*/g,a):p}`,R=O??process.cwd(),w=h.pathToFileURL(l.join(R,"dummy.ts")).href;try{return{...await y(U,{parentURL:w},e),shortCircuit:!0}}catch(u){if(console.error(`TS-ARC: Failed to resolve mapped specifier "${U}" from base "${R}":`,u.message),u.code!=="ERR_MODULE_NOT_FOUND")throw u}}}if(t){const s=l.resolve(d??"",t),a=`./${r}`,c=h.pathToFileURL(l.join(s,"dummy.ts")).href;try{return{...await y(a,{parentURL:c},e),shortCircuit:!0}}catch(n){if(console.error(`TS-ARC: Failed to resolve specifier "${r}" from baseUrl "${s}":`,n.message),n.code!=="ERR_MODULE_NOT_FOUND")throw n}}}try{return{...await e(r,i),shortCircuit:!0}}catch(t){throw t.code==="ERR_MODULE_NOT_FOUND",t}}try{return{...await e(r,i),shortCircuit:!0}}catch(t){if(t.code!=="ERR_MODULE_NOT_FOUND")throw t}if(l.extname(r)!=="")throw new Error(`Module not found: ${r}`);for(const t of[".ts",".tsx"])try{return{...await e(r+t,i),shortCircuit:!0}}catch(o){if(o.code!=="ERR_MODULE_NOT_FOUND")throw o}for(const t of["/index.ts","/index.tsx"])try{return{...await e(r+t,i),shortCircuit:!0}}catch(o){if(o.code!=="ERR_MODULE_NOT_FOUND")throw o}throw new Error(`Module not found: ${r}`)}async function E(r,i,e){if(!r.endsWith(".ts")&&!r.endsWith(".tsx"))return e(r,i);const g=r.endsWith(".tsx")?"tsx":"ts",f=h.fileURLToPath(r),t=_.readFileSync(f,"utf8"),{code:o}=D(t,{loader:g,format:"esm",target:`node${process.versions.node}`,sourcemap:"inline",sourcefile:f,banner:`
import { createRequire } from 'module';
const require = createRequire(import.meta.url);`});return{format:"module",source:o,shortCircuit:!0}}export{b as initialize,E as load,y as resolve};
